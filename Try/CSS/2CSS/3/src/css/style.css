/*Specificity & When to use Selectors
    Every CSS selector has its place in the specificity hierarchy.

    There are four categories which define the specificity level of a selector:
        -> Inline styles - Example: <h1 style="color: pink;">
        -> IDs - Example: #navbar
        -> Classes, pseudo-classes, attribute selectors - Example: .test, :hover, [href]
        -> Elements and pseudo-elements - Example: h1, :before

        Selector	                Specificity Value	Calculation
            p	                            1	            1
            p.test	                        11	            1 + 10
            p#demo	                        101	            1 + 100
            <p style="color: pink;">	    1000	        1000
            #demo	                        100	            100
            .test	                        10	            10
            p.test1.test2	                21	            1 + 10 + 10
            #navbar p#demo	                201	            100 + 1 + 100
            *	                            0	            0 (the universal selector is ignored)

                element > class(.) > id(#) > inline-styling

                CSS The !important Rule

        What is !important?
           The !important rule in CSS is used to add more importance to a property/value than normal.

           In fact, if you use the !important rule, it will override ALL previous styling rules for that specific property on that element!


*/
h1{
    text-align: center;
}

h2{
    color: red;
}

.subtitle{
    color: blue;
}

#services{  /*Specificity*/
    color: green;
}

.button {
  background-color: #8c8c8c !important; 
  color: white !important;
  padding: 5px !important;
  border: 1px solid black !important; 
}

#myDiv a {
  color: red;
  background-color: yellow;  
}

/*Pseudoselectors*/

h2:hover{
    color: lightgreen;
}

li:nth-child(2){  /* Specificity (ul > li{....})*/
    color: tomato;
}

li:only-child {   /* To style the element with Single count with different parent element*/
    color: brown;
}

/*#twitter-link:link {
    color: blue;
}

#twitter-link:visited {
    color: purple;   
}*/

/*Advanced Selectors*/

h2 + a {   /*Need "not" to be Parent Element*/
    color: fuchsia;
}

textarea ~ button{     /* Need to be Parent Element*/
    color: peru;
}

ul > li {  /* Every single child of certain Element*/
    color: lime;
}